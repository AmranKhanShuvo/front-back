{"version":3,"file":"static/js/741.8528c20d.chunk.js","mappings":"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","sources":["shared/components/FormElements/ImageUpload.jsx","shared/components/FormElements/Input.jsx","shared/components/UIElements/Card.jsx","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","user/pages/Authenticate.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const imagePickRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const imagePickHandler = () => {\r\n    imagePickRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        type=\"file\"\r\n        ref={imagePickRef}\r\n        id={props.id}\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"preview\" />}\r\n          {!previewUrl && <p>Please pick a image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={imagePickHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText} </p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","// Can use FORMIK dependency for this form funtionality.\r\n\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport { validate } from \"../../util/validators\";\r\n\r\nfunction inputReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction Input(props) {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.value || \"\",\r\n    isValid: props.valid || false,\r\n    isTouched: false,\r\n  });\r\n\r\n  const { value, isValid } = inputState;\r\n  const { onInput, id } = props;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [onInput, id, value, isValid]);\r\n\r\n  function handleChange(e) {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: e.target.value,\r\n      validators: props.validators,\r\n    });\r\n  }\r\n\r\n  function handleTouch() {\r\n    dispatch({ type: \"TOUCH\" });\r\n  }\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onBlur={handleTouch}\r\n        onChange={handleChange}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={handleChange}\r\n        onBlur={handleTouch}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label} </label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText} </p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\n\nfunction Card(props) {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Card;\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const titleId in state.inputs) {\r\n        if (!state.inputs[titleId]) {\r\n          continue;\r\n        } else if (titleId === action.titleId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[titleId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.titleId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n\r\n        isValid: formIsValid,\r\n      };\r\n\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.setInputs,\r\n        isValid: action.setValidity,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialValidation) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialValidation,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      titleId: id,\r\n      value: value,\r\n      isValid: isValid,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputsData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      setInputs: inputsData,\r\n      setValidity: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useContext, useState } from \"react\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nconst Authenticate = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [loginMode, setLoginMode] = useState(true);\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const handleAuth = async (event) => {\r\n    event.preventDefault();\r\n    if (loginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/login\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.logIn(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\r\n          \"POST\",\r\n          formData\r\n        );\r\n        auth.logIn(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  const switchMode = () => {\r\n    if (!loginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login required</h2>\r\n        <hr />\r\n        <form onSubmit={handleAuth}>\r\n          {!loginMode && (\r\n            <ImageUpload\r\n              id=\"image\"\r\n              center\r\n              onInput={inputHandler}\r\n              errorText=\"Please select an image.\"\r\n            />\r\n          )}\r\n          {!loginMode && (\r\n            <Input\r\n              id=\"name\"\r\n              element=\"input\"\r\n              type=\"text\"\r\n              label=\"User Name\"\r\n              onInput={inputHandler}\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Password enter a user name.\"\r\n            />\r\n          )}\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            onInput={inputHandler}\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Enter valid email.\"\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            onInput={inputHandler}\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Enter valid password (MIN. 6).\"\r\n          />\r\n\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {loginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n\r\n        <Button inverse onClick={switchMode}>\r\n          {loginMode ? \"Create an account\" : \"Already have an account? Login\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Authenticate;\r\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","isValid","setIsValid","imagePickRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","className","children","_jsx","type","ref","id","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","concat","center","src","alt","Button","onClick","current","click","errorText","inputReducer","state","action","_objectSpread","value","val","validate","validators","isTouched","_useReducer","useReducer","valid","_useReducer2","inputState","dispatch","handleChange","e","handleTouch","element","placeholder","onBlur","rows","htmlFor","label","formReducer","formIsValid","titleId","inputs","_defineProperty","setInputs","setValidity","useForm","initialInputs","initialValidation","formState","useCallback","inputsData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","_step","_iterator","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_createForOfIteratorHelper","validator","trim","test","auth","useContext","AuthContext","loginMode","setLoginMode","_useForm","email","password","_useForm2","inputHandler","setFormData","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","handleAuth","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","formData","_responseData","wrap","_context","prev","preventDefault","process","JSON","stringify","sent","logIn","userId","token","t0","FormData","append","name","image","t1","stop","_x","apply","arguments","React","ErrorModal","onClear","Card","LoadingSpinner","asOverlay","onSubmit","ImageUpload","Input","disabled","inverse","undefined","prevMode"],"sourceRoot":""}